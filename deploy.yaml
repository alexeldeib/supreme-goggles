---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-tls-controller-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: aks-tls-controller-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kube-apiserver-client-kubelet
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-tls-controller-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aks-tls-controller-role
subjects:
- kind: ServiceAccount
  name: aks-tls-controller-service-account
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name aks-tls-controller
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  replicas: 1
  template:
    metadata:
      labels:
        app: *name
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - command:
        - /manager
        args:
        - --enable-leader-election
        env:
        - name: POD_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: docker.io/alexeldeib/aks-tls-approver:dev
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 250m
            memory: 250Mi
      terminationGracePeriodSeconds: 10
      serviceAccountName: aks-tls-controller-service-account
---